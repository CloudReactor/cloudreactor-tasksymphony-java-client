/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.cloudreactor.tasksymphony.model.NameAndUuid;
import io.cloudreactor.tasksymphony.model.WorkflowExecutionStatus;
import io.cloudreactor.tasksymphony.model.WorkflowTaskInstanceExecution;
import io.cloudreactor.tasksymphony.model.WorkflowTransitionEvaluation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for PatchedWorkflowExecution
 */
public class PatchedWorkflowExecutionTest {
    private final PatchedWorkflowExecution model = new PatchedWorkflowExecution();

    /**
     * Model tests for PatchedWorkflowExecution
     */
    @Test
    public void testPatchedWorkflowExecution() {
        // TODO: test PatchedWorkflowExecution
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'uuid'
     */
    @Test
    public void uuidTest() {
        // TODO: test uuid
    }

    /**
     * Test the property 'dashboardUrl'
     */
    @Test
    public void dashboardUrlTest() {
        // TODO: test dashboardUrl
    }

    /**
     * Test the property 'workflow'
     */
    @Test
    public void workflowTest() {
        // TODO: test workflow
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'runReason'
     */
    @Test
    public void runReasonTest() {
        // TODO: test runReason
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'startedBy'
     */
    @Test
    public void startedByTest() {
        // TODO: test startedBy
    }

    /**
     * Test the property 'finishedAt'
     */
    @Test
    public void finishedAtTest() {
        // TODO: test finishedAt
    }

    /**
     * Test the property 'lastHeartbeatAt'
     */
    @Test
    public void lastHeartbeatAtTest() {
        // TODO: test lastHeartbeatAt
    }

    /**
     * Test the property 'stopReason'
     */
    @Test
    public void stopReasonTest() {
        // TODO: test stopReason
    }

    /**
     * Test the property 'markedDoneAt'
     */
    @Test
    public void markedDoneAtTest() {
        // TODO: test markedDoneAt
    }

    /**
     * Test the property 'markedDoneBy'
     */
    @Test
    public void markedDoneByTest() {
        // TODO: test markedDoneBy
    }

    /**
     * Test the property 'killStartedAt'
     */
    @Test
    public void killStartedAtTest() {
        // TODO: test killStartedAt
    }

    /**
     * Test the property 'killedBy'
     */
    @Test
    public void killedByTest() {
        // TODO: test killedBy
    }

    /**
     * Test the property 'killFinishedAt'
     */
    @Test
    public void killFinishedAtTest() {
        // TODO: test killFinishedAt
    }

    /**
     * Test the property 'killErrorCode'
     */
    @Test
    public void killErrorCodeTest() {
        // TODO: test killErrorCode
    }

    /**
     * Test the property 'failedAttempts'
     */
    @Test
    public void failedAttemptsTest() {
        // TODO: test failedAttempts
    }

    /**
     * Test the property 'timedOutAttempts'
     */
    @Test
    public void timedOutAttemptsTest() {
        // TODO: test timedOutAttempts
    }

    /**
     * Test the property 'workflowSnapshot'
     */
    @Test
    public void workflowSnapshotTest() {
        // TODO: test workflowSnapshot
    }

    /**
     * Test the property 'workflowTaskInstanceExecutions'
     */
    @Test
    public void workflowTaskInstanceExecutionsTest() {
        // TODO: test workflowTaskInstanceExecutions
    }

    /**
     * Test the property 'workflowTransitionEvaluations'
     */
    @Test
    public void workflowTransitionEvaluationsTest() {
        // TODO: test workflowTransitionEvaluations
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

}
