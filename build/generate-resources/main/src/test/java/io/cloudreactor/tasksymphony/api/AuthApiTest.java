/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.api;

import io.cloudreactor.tasksymphony.invoker.ApiException;
import io.cloudreactor.tasksymphony.model.TokenObtainPair;
import io.cloudreactor.tasksymphony.model.TokenRefresh;
import io.cloudreactor.tasksymphony.model.TokenVerify;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthApi
 */
@Ignore
public class AuthApiTest {

    private final AuthApi api = new AuthApi();

    /**
     * Takes a set of user credentials and returns an access and refresh JSON web token pair to prove the authentication of those credentials.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authJwtCreateCreateTest() throws ApiException {
        TokenObtainPair tokenObtainPair = null;
        TokenObtainPair response = api.authJwtCreateCreate(tokenObtainPair);

        // TODO: test validations
    }
    /**
     * Takes a refresh type JSON web token and returns an access type JSON web token if the refresh token is valid.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authJwtRefreshCreateTest() throws ApiException {
        TokenRefresh tokenRefresh = null;
        TokenRefresh response = api.authJwtRefreshCreate(tokenRefresh);

        // TODO: test validations
    }
    /**
     * Takes a token and indicates if it is valid.  This view provides no information about a token&#39;s fitness for a particular use.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void authJwtVerifyCreateTest() throws ApiException {
        TokenVerify tokenVerify = null;
        TokenVerify response = api.authJwtVerifyCreate(tokenVerify);

        // TODO: test validations
    }
}
