/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.api;

import io.cloudreactor.tasksymphony.invoker.ApiException;
import io.cloudreactor.tasksymphony.model.PaginatedTaskExecutionList;
import io.cloudreactor.tasksymphony.model.PatchedTaskExecution;
import io.cloudreactor.tasksymphony.model.TaskExecution;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TaskExecutionsApi
 */
@Ignore
public class TaskExecutionsApiTest {

    private final TaskExecutionsApi api = new TaskExecutionsApi();

    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsCreateTest() throws ApiException {
        TaskExecution taskExecution = null;
        TaskExecution response = api.taskExecutionsCreate(taskExecution);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsDestroyTest() throws ApiException {
        UUID uuid = null;
        api.taskExecutionsDestroy(uuid);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsListTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String ordering = null;
        String search = null;
        Integer taskCreatedByGroupId = null;
        String taskUuid = null;
        PaginatedTaskExecutionList response = api.taskExecutionsList(limit, offset, ordering, search, taskCreatedByGroupId, taskUuid);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsPartialUpdateTest() throws ApiException {
        UUID uuid = null;
        PatchedTaskExecution patchedTaskExecution = null;
        TaskExecution response = api.taskExecutionsPartialUpdate(uuid, patchedTaskExecution);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsRetrieveTest() throws ApiException {
        UUID uuid = null;
        TaskExecution response = api.taskExecutionsRetrieve(uuid);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void taskExecutionsUpdateTest() throws ApiException {
        UUID uuid = null;
        TaskExecution taskExecution = null;
        TaskExecution response = api.taskExecutionsUpdate(uuid, taskExecution);

        // TODO: test validations
    }
}
