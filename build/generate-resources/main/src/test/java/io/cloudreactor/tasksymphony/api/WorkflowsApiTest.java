/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.api;

import io.cloudreactor.tasksymphony.invoker.ApiException;
import io.cloudreactor.tasksymphony.model.PaginatedWorkflowSummaryList;
import io.cloudreactor.tasksymphony.model.PatchedWorkflow;
import java.util.UUID;
import io.cloudreactor.tasksymphony.model.Workflow;
import org.junit.Test;
import org.junit.Ignore;
import org.junit.Assert;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkflowsApi
 */
@Ignore
public class WorkflowsApiTest {

    private final WorkflowsApi api = new WorkflowsApi();

    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsCloneCreateTest() throws ApiException {
        UUID uuid = null;
        Workflow workflow = null;
        Workflow response = api.workflowsCloneCreate(uuid, workflow);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsCreateTest() throws ApiException {
        Workflow workflow = null;
        Workflow response = api.workflowsCreate(workflow);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsDestroyTest() throws ApiException {
        UUID uuid = null;
        api.workflowsDestroy(uuid);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsListTest() throws ApiException {
        String description = null;
        Integer limit = null;
        String name = null;
        Integer offset = null;
        String ordering = null;
        String runEnvironmentUuid = null;
        String search = null;
        PaginatedWorkflowSummaryList response = api.workflowsList(description, limit, name, offset, ordering, runEnvironmentUuid, search);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsPartialUpdateTest() throws ApiException {
        UUID uuid = null;
        PatchedWorkflow patchedWorkflow = null;
        Workflow response = api.workflowsPartialUpdate(uuid, patchedWorkflow);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsRetrieveTest() throws ApiException {
        UUID uuid = null;
        Workflow response = api.workflowsRetrieve(uuid);

        // TODO: test validations
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void workflowsUpdateTest() throws ApiException {
        UUID uuid = null;
        Workflow workflow = null;
        Workflow response = api.workflowsUpdate(uuid, workflow);

        // TODO: test validations
    }
}
