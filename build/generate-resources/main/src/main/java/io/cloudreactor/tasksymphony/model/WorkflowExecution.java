/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.cloudreactor.tasksymphony.model.NameAndUuid;
import io.cloudreactor.tasksymphony.model.WorkflowTaskInstanceExecution;
import io.cloudreactor.tasksymphony.model.WorkflowTransitionEvaluation;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * WorkflowExecution
 */
@JsonPropertyOrder({
  WorkflowExecution.JSON_PROPERTY_URL,
  WorkflowExecution.JSON_PROPERTY_UUID,
  WorkflowExecution.JSON_PROPERTY_DASHBOARD_URL,
  WorkflowExecution.JSON_PROPERTY_WORKFLOW,
  WorkflowExecution.JSON_PROPERTY_STATUS,
  WorkflowExecution.JSON_PROPERTY_RUN_REASON,
  WorkflowExecution.JSON_PROPERTY_STARTED_AT,
  WorkflowExecution.JSON_PROPERTY_STARTED_BY,
  WorkflowExecution.JSON_PROPERTY_FINISHED_AT,
  WorkflowExecution.JSON_PROPERTY_LAST_HEARTBEAT_AT,
  WorkflowExecution.JSON_PROPERTY_STOP_REASON,
  WorkflowExecution.JSON_PROPERTY_MARKED_DONE_AT,
  WorkflowExecution.JSON_PROPERTY_MARKED_DONE_BY,
  WorkflowExecution.JSON_PROPERTY_KILL_STARTED_AT,
  WorkflowExecution.JSON_PROPERTY_KILLED_BY,
  WorkflowExecution.JSON_PROPERTY_KILL_FINISHED_AT,
  WorkflowExecution.JSON_PROPERTY_KILL_ERROR_CODE,
  WorkflowExecution.JSON_PROPERTY_FAILED_ATTEMPTS,
  WorkflowExecution.JSON_PROPERTY_TIMED_OUT_ATTEMPTS,
  WorkflowExecution.JSON_PROPERTY_WORKFLOW_SNAPSHOT,
  WorkflowExecution.JSON_PROPERTY_WORKFLOW_TASK_INSTANCE_EXECUTIONS,
  WorkflowExecution.JSON_PROPERTY_WORKFLOW_TRANSITION_EVALUATIONS,
  WorkflowExecution.JSON_PROPERTY_CREATED_AT,
  WorkflowExecution.JSON_PROPERTY_UPDATED_AT
})
@JsonTypeName("WorkflowExecution")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-31T16:51:00.429-07:00[America/Los_Angeles]")
public class WorkflowExecution {
  public static final String JSON_PROPERTY_URL = "url";
  private URI url;

  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_DASHBOARD_URL = "dashboard_url";
  private String dashboardUrl;

  public static final String JSON_PROPERTY_WORKFLOW = "workflow";
  private NameAndUuid workflow;

  public static final String JSON_PROPERTY_STATUS = "status";
  private String status;

  public static final String JSON_PROPERTY_RUN_REASON = "run_reason";
  private Integer runReason;

  public static final String JSON_PROPERTY_STARTED_AT = "started_at";
  private OffsetDateTime startedAt;

  public static final String JSON_PROPERTY_STARTED_BY = "started_by";
  private String startedBy;

  public static final String JSON_PROPERTY_FINISHED_AT = "finished_at";
  private JsonNullable<OffsetDateTime> finishedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_LAST_HEARTBEAT_AT = "last_heartbeat_at";
  private JsonNullable<OffsetDateTime> lastHeartbeatAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_STOP_REASON = "stop_reason";
  private JsonNullable<Integer> stopReason = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MARKED_DONE_AT = "marked_done_at";
  private JsonNullable<OffsetDateTime> markedDoneAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MARKED_DONE_BY = "marked_done_by";
  private String markedDoneBy;

  public static final String JSON_PROPERTY_KILL_STARTED_AT = "kill_started_at";
  private JsonNullable<OffsetDateTime> killStartedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_KILLED_BY = "killed_by";
  private String killedBy;

  public static final String JSON_PROPERTY_KILL_FINISHED_AT = "kill_finished_at";
  private JsonNullable<OffsetDateTime> killFinishedAt = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_KILL_ERROR_CODE = "kill_error_code";
  private JsonNullable<Integer> killErrorCode = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_FAILED_ATTEMPTS = "failed_attempts";
  private Integer failedAttempts;

  public static final String JSON_PROPERTY_TIMED_OUT_ATTEMPTS = "timed_out_attempts";
  private Integer timedOutAttempts;

  public static final String JSON_PROPERTY_WORKFLOW_SNAPSHOT = "workflow_snapshot";
  private JsonNullable<Map<String, Object>> workflowSnapshot = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_WORKFLOW_TASK_INSTANCE_EXECUTIONS = "workflow_task_instance_executions";
  private List<WorkflowTaskInstanceExecution> workflowTaskInstanceExecutions = new ArrayList<>();

  public static final String JSON_PROPERTY_WORKFLOW_TRANSITION_EVALUATIONS = "workflow_transition_evaluations";
  private List<WorkflowTransitionEvaluation> workflowTransitionEvaluations = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private OffsetDateTime updatedAt;


   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getUrl() {
    return url;
  }




   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Get dashboardUrl
   * @return dashboardUrl
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DASHBOARD_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDashboardUrl() {
    return dashboardUrl;
  }




   /**
   * Get workflow
   * @return workflow
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NameAndUuid getWorkflow() {
    return workflow;
  }




  public WorkflowExecution status(String status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(String status) {
    this.status = status;
  }


  public WorkflowExecution runReason(Integer runReason) {
    
    this.runReason = runReason;
    return this;
  }

   /**
   * Get runReason
   * minimum: -2147483648
   * maximum: 2147483647
   * @return runReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RUN_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRunReason() {
    return runReason;
  }


  @JsonProperty(JSON_PROPERTY_RUN_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunReason(Integer runReason) {
    this.runReason = runReason;
  }


   /**
   * Get startedAt
   * @return startedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getStartedAt() {
    return startedAt;
  }




   /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   * @return startedBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.")
  @JsonProperty(JSON_PROPERTY_STARTED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getStartedBy() {
    return startedBy;
  }




  public WorkflowExecution finishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = JsonNullable.<OffsetDateTime>of(finishedAt);
    
    return this;
  }

   /**
   * Get finishedAt
   * @return finishedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getFinishedAt() {
        return finishedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getFinishedAt_JsonNullable() {
    return finishedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_FINISHED_AT)
  public void setFinishedAt_JsonNullable(JsonNullable<OffsetDateTime> finishedAt) {
    this.finishedAt = finishedAt;
  }

  public void setFinishedAt(OffsetDateTime finishedAt) {
    this.finishedAt = JsonNullable.<OffsetDateTime>of(finishedAt);
  }


  public WorkflowExecution lastHeartbeatAt(OffsetDateTime lastHeartbeatAt) {
    this.lastHeartbeatAt = JsonNullable.<OffsetDateTime>of(lastHeartbeatAt);
    
    return this;
  }

   /**
   * Get lastHeartbeatAt
   * @return lastHeartbeatAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getLastHeartbeatAt() {
        return lastHeartbeatAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_HEARTBEAT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getLastHeartbeatAt_JsonNullable() {
    return lastHeartbeatAt;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_HEARTBEAT_AT)
  public void setLastHeartbeatAt_JsonNullable(JsonNullable<OffsetDateTime> lastHeartbeatAt) {
    this.lastHeartbeatAt = lastHeartbeatAt;
  }

  public void setLastHeartbeatAt(OffsetDateTime lastHeartbeatAt) {
    this.lastHeartbeatAt = JsonNullable.<OffsetDateTime>of(lastHeartbeatAt);
  }


  public WorkflowExecution stopReason(Integer stopReason) {
    this.stopReason = JsonNullable.<Integer>of(stopReason);
    
    return this;
  }

   /**
   * Get stopReason
   * minimum: -2147483648
   * maximum: 2147483647
   * @return stopReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getStopReason() {
        return stopReason.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STOP_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getStopReason_JsonNullable() {
    return stopReason;
  }
  
  @JsonProperty(JSON_PROPERTY_STOP_REASON)
  public void setStopReason_JsonNullable(JsonNullable<Integer> stopReason) {
    this.stopReason = stopReason;
  }

  public void setStopReason(Integer stopReason) {
    this.stopReason = JsonNullable.<Integer>of(stopReason);
  }


  public WorkflowExecution markedDoneAt(OffsetDateTime markedDoneAt) {
    this.markedDoneAt = JsonNullable.<OffsetDateTime>of(markedDoneAt);
    
    return this;
  }

   /**
   * Get markedDoneAt
   * @return markedDoneAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getMarkedDoneAt() {
        return markedDoneAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MARKED_DONE_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getMarkedDoneAt_JsonNullable() {
    return markedDoneAt;
  }
  
  @JsonProperty(JSON_PROPERTY_MARKED_DONE_AT)
  public void setMarkedDoneAt_JsonNullable(JsonNullable<OffsetDateTime> markedDoneAt) {
    this.markedDoneAt = markedDoneAt;
  }

  public void setMarkedDoneAt(OffsetDateTime markedDoneAt) {
    this.markedDoneAt = JsonNullable.<OffsetDateTime>of(markedDoneAt);
  }


   /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   * @return markedDoneBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.")
  @JsonProperty(JSON_PROPERTY_MARKED_DONE_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMarkedDoneBy() {
    return markedDoneBy;
  }




  public WorkflowExecution killStartedAt(OffsetDateTime killStartedAt) {
    this.killStartedAt = JsonNullable.<OffsetDateTime>of(killStartedAt);
    
    return this;
  }

   /**
   * Get killStartedAt
   * @return killStartedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getKillStartedAt() {
        return killStartedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KILL_STARTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getKillStartedAt_JsonNullable() {
    return killStartedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_KILL_STARTED_AT)
  public void setKillStartedAt_JsonNullable(JsonNullable<OffsetDateTime> killStartedAt) {
    this.killStartedAt = killStartedAt;
  }

  public void setKillStartedAt(OffsetDateTime killStartedAt) {
    this.killStartedAt = JsonNullable.<OffsetDateTime>of(killStartedAt);
  }


   /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   * @return killedBy
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.")
  @JsonProperty(JSON_PROPERTY_KILLED_BY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKilledBy() {
    return killedBy;
  }




  public WorkflowExecution killFinishedAt(OffsetDateTime killFinishedAt) {
    this.killFinishedAt = JsonNullable.<OffsetDateTime>of(killFinishedAt);
    
    return this;
  }

   /**
   * Get killFinishedAt
   * @return killFinishedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getKillFinishedAt() {
        return killFinishedAt.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KILL_FINISHED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getKillFinishedAt_JsonNullable() {
    return killFinishedAt;
  }
  
  @JsonProperty(JSON_PROPERTY_KILL_FINISHED_AT)
  public void setKillFinishedAt_JsonNullable(JsonNullable<OffsetDateTime> killFinishedAt) {
    this.killFinishedAt = killFinishedAt;
  }

  public void setKillFinishedAt(OffsetDateTime killFinishedAt) {
    this.killFinishedAt = JsonNullable.<OffsetDateTime>of(killFinishedAt);
  }


  public WorkflowExecution killErrorCode(Integer killErrorCode) {
    this.killErrorCode = JsonNullable.<Integer>of(killErrorCode);
    
    return this;
  }

   /**
   * Get killErrorCode
   * minimum: -2147483648
   * maximum: 2147483647
   * @return killErrorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getKillErrorCode() {
        return killErrorCode.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_KILL_ERROR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getKillErrorCode_JsonNullable() {
    return killErrorCode;
  }
  
  @JsonProperty(JSON_PROPERTY_KILL_ERROR_CODE)
  public void setKillErrorCode_JsonNullable(JsonNullable<Integer> killErrorCode) {
    this.killErrorCode = killErrorCode;
  }

  public void setKillErrorCode(Integer killErrorCode) {
    this.killErrorCode = JsonNullable.<Integer>of(killErrorCode);
  }


  public WorkflowExecution failedAttempts(Integer failedAttempts) {
    
    this.failedAttempts = failedAttempts;
    return this;
  }

   /**
   * Get failedAttempts
   * minimum: -2147483648
   * maximum: 2147483647
   * @return failedAttempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAILED_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFailedAttempts() {
    return failedAttempts;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailedAttempts(Integer failedAttempts) {
    this.failedAttempts = failedAttempts;
  }


  public WorkflowExecution timedOutAttempts(Integer timedOutAttempts) {
    
    this.timedOutAttempts = timedOutAttempts;
    return this;
  }

   /**
   * Get timedOutAttempts
   * minimum: -2147483648
   * maximum: 2147483647
   * @return timedOutAttempts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMED_OUT_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimedOutAttempts() {
    return timedOutAttempts;
  }


  @JsonProperty(JSON_PROPERTY_TIMED_OUT_ATTEMPTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimedOutAttempts(Integer timedOutAttempts) {
    this.timedOutAttempts = timedOutAttempts;
  }


  public WorkflowExecution workflowSnapshot(Map<String, Object> workflowSnapshot) {
    this.workflowSnapshot = JsonNullable.<Map<String, Object>>of(workflowSnapshot);
    
    return this;
  }

  public WorkflowExecution putWorkflowSnapshotItem(String key, Object workflowSnapshotItem) {
    if (this.workflowSnapshot == null || !this.workflowSnapshot.isPresent()) {
      this.workflowSnapshot = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.workflowSnapshot.get().put(key, workflowSnapshotItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get workflowSnapshot
   * @return workflowSnapshot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Map<String, Object> getWorkflowSnapshot() {
        return workflowSnapshot.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORKFLOW_SNAPSHOT)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getWorkflowSnapshot_JsonNullable() {
    return workflowSnapshot;
  }
  
  @JsonProperty(JSON_PROPERTY_WORKFLOW_SNAPSHOT)
  public void setWorkflowSnapshot_JsonNullable(JsonNullable<Map<String, Object>> workflowSnapshot) {
    this.workflowSnapshot = workflowSnapshot;
  }

  public void setWorkflowSnapshot(Map<String, Object> workflowSnapshot) {
    this.workflowSnapshot = JsonNullable.<Map<String, Object>>of(workflowSnapshot);
  }


   /**
   * Get workflowTaskInstanceExecutions
   * @return workflowTaskInstanceExecutions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW_TASK_INSTANCE_EXECUTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WorkflowTaskInstanceExecution> getWorkflowTaskInstanceExecutions() {
    return workflowTaskInstanceExecutions;
  }




   /**
   * Get workflowTransitionEvaluations
   * @return workflowTransitionEvaluations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW_TRANSITION_EVALUATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<WorkflowTransitionEvaluation> getWorkflowTransitionEvaluations() {
    return workflowTransitionEvaluations;
  }




   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowExecution workflowExecution = (WorkflowExecution) o;
    return Objects.equals(this.url, workflowExecution.url) &&
        Objects.equals(this.uuid, workflowExecution.uuid) &&
        Objects.equals(this.dashboardUrl, workflowExecution.dashboardUrl) &&
        Objects.equals(this.workflow, workflowExecution.workflow) &&
        Objects.equals(this.status, workflowExecution.status) &&
        Objects.equals(this.runReason, workflowExecution.runReason) &&
        Objects.equals(this.startedAt, workflowExecution.startedAt) &&
        Objects.equals(this.startedBy, workflowExecution.startedBy) &&
        equalsNullable(this.finishedAt, workflowExecution.finishedAt) &&
        equalsNullable(this.lastHeartbeatAt, workflowExecution.lastHeartbeatAt) &&
        equalsNullable(this.stopReason, workflowExecution.stopReason) &&
        equalsNullable(this.markedDoneAt, workflowExecution.markedDoneAt) &&
        Objects.equals(this.markedDoneBy, workflowExecution.markedDoneBy) &&
        equalsNullable(this.killStartedAt, workflowExecution.killStartedAt) &&
        Objects.equals(this.killedBy, workflowExecution.killedBy) &&
        equalsNullable(this.killFinishedAt, workflowExecution.killFinishedAt) &&
        equalsNullable(this.killErrorCode, workflowExecution.killErrorCode) &&
        Objects.equals(this.failedAttempts, workflowExecution.failedAttempts) &&
        Objects.equals(this.timedOutAttempts, workflowExecution.timedOutAttempts) &&
        equalsNullable(this.workflowSnapshot, workflowExecution.workflowSnapshot) &&
        Objects.equals(this.workflowTaskInstanceExecutions, workflowExecution.workflowTaskInstanceExecutions) &&
        Objects.equals(this.workflowTransitionEvaluations, workflowExecution.workflowTransitionEvaluations) &&
        Objects.equals(this.createdAt, workflowExecution.createdAt) &&
        Objects.equals(this.updatedAt, workflowExecution.updatedAt);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, uuid, dashboardUrl, workflow, status, runReason, startedAt, startedBy, hashCodeNullable(finishedAt), hashCodeNullable(lastHeartbeatAt), hashCodeNullable(stopReason), hashCodeNullable(markedDoneAt), markedDoneBy, hashCodeNullable(killStartedAt), killedBy, hashCodeNullable(killFinishedAt), hashCodeNullable(killErrorCode), failedAttempts, timedOutAttempts, hashCodeNullable(workflowSnapshot), workflowTaskInstanceExecutions, workflowTransitionEvaluations, createdAt, updatedAt);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowExecution {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    dashboardUrl: ").append(toIndentedString(dashboardUrl)).append("\n");
    sb.append("    workflow: ").append(toIndentedString(workflow)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    runReason: ").append(toIndentedString(runReason)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    startedBy: ").append(toIndentedString(startedBy)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    lastHeartbeatAt: ").append(toIndentedString(lastHeartbeatAt)).append("\n");
    sb.append("    stopReason: ").append(toIndentedString(stopReason)).append("\n");
    sb.append("    markedDoneAt: ").append(toIndentedString(markedDoneAt)).append("\n");
    sb.append("    markedDoneBy: ").append(toIndentedString(markedDoneBy)).append("\n");
    sb.append("    killStartedAt: ").append(toIndentedString(killStartedAt)).append("\n");
    sb.append("    killedBy: ").append(toIndentedString(killedBy)).append("\n");
    sb.append("    killFinishedAt: ").append(toIndentedString(killFinishedAt)).append("\n");
    sb.append("    killErrorCode: ").append(toIndentedString(killErrorCode)).append("\n");
    sb.append("    failedAttempts: ").append(toIndentedString(failedAttempts)).append("\n");
    sb.append("    timedOutAttempts: ").append(toIndentedString(timedOutAttempts)).append("\n");
    sb.append("    workflowSnapshot: ").append(toIndentedString(workflowSnapshot)).append("\n");
    sb.append("    workflowTaskInstanceExecutions: ").append(toIndentedString(workflowTaskInstanceExecutions)).append("\n");
    sb.append("    workflowTransitionEvaluations: ").append(toIndentedString(workflowTransitionEvaluations)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

