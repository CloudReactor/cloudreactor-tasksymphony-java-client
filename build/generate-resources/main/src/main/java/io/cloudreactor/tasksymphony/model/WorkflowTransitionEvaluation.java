/*
 * CloudReactor API
 * CloudReactor API Documentation
 *
 * The version of the OpenAPI document: 0.2.0
 * Contact: jeff@cloudreactor.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.cloudreactor.tasksymphony.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.cloudreactor.tasksymphony.model.NameAndUuid;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * A WorkflowTransitionEvaluation is a saved evaluation of the conditions in a WorkflowTransition during a WorkflowExecution.
 */
@ApiModel(description = "A WorkflowTransitionEvaluation is a saved evaluation of the conditions in a WorkflowTransition during a WorkflowExecution.")
@JsonPropertyOrder({
  WorkflowTransitionEvaluation.JSON_PROPERTY_UUID,
  WorkflowTransitionEvaluation.JSON_PROPERTY_RESULT,
  WorkflowTransitionEvaluation.JSON_PROPERTY_WORKFLOW_TRANSITION,
  WorkflowTransitionEvaluation.JSON_PROPERTY_WORKFLOW_EXECUTION,
  WorkflowTransitionEvaluation.JSON_PROPERTY_FROM_WORKFLOW_TASK_INSTANCE_EXECUTION,
  WorkflowTransitionEvaluation.JSON_PROPERTY_EVALUATED_AT
})
@JsonTypeName("WorkflowTransitionEvaluation")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkflowTransitionEvaluation {
  public static final String JSON_PROPERTY_UUID = "uuid";
  private UUID uuid;

  public static final String JSON_PROPERTY_RESULT = "result";
  private Boolean result;

  public static final String JSON_PROPERTY_WORKFLOW_TRANSITION = "workflow_transition";
  private NameAndUuid workflowTransition;

  public static final String JSON_PROPERTY_WORKFLOW_EXECUTION = "workflow_execution";
  private NameAndUuid workflowExecution;

  public static final String JSON_PROPERTY_FROM_WORKFLOW_TASK_INSTANCE_EXECUTION = "from_workflow_task_instance_execution";
  private String fromWorkflowTaskInstanceExecution;

  public static final String JSON_PROPERTY_EVALUATED_AT = "evaluated_at";
  private OffsetDateTime evaluatedAt;


   /**
   * Get uuid
   * @return uuid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UUID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUuid() {
    return uuid;
  }




   /**
   * Get result
   * @return result
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getResult() {
    return result;
  }




   /**
   * Get workflowTransition
   * @return workflowTransition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW_TRANSITION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NameAndUuid getWorkflowTransition() {
    return workflowTransition;
  }




   /**
   * Get workflowExecution
   * @return workflowExecution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_WORKFLOW_EXECUTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public NameAndUuid getWorkflowExecution() {
    return workflowExecution;
  }




   /**
   * Get fromWorkflowTaskInstanceExecution
   * @return fromWorkflowTaskInstanceExecution
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FROM_WORKFLOW_TASK_INSTANCE_EXECUTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getFromWorkflowTaskInstanceExecution() {
    return fromWorkflowTaskInstanceExecution;
  }




   /**
   * Get evaluatedAt
   * @return evaluatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EVALUATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getEvaluatedAt() {
    return evaluatedAt;
  }




  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowTransitionEvaluation workflowTransitionEvaluation = (WorkflowTransitionEvaluation) o;
    return Objects.equals(this.uuid, workflowTransitionEvaluation.uuid) &&
        Objects.equals(this.result, workflowTransitionEvaluation.result) &&
        Objects.equals(this.workflowTransition, workflowTransitionEvaluation.workflowTransition) &&
        Objects.equals(this.workflowExecution, workflowTransitionEvaluation.workflowExecution) &&
        Objects.equals(this.fromWorkflowTaskInstanceExecution, workflowTransitionEvaluation.fromWorkflowTaskInstanceExecution) &&
        Objects.equals(this.evaluatedAt, workflowTransitionEvaluation.evaluatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, result, workflowTransition, workflowExecution, fromWorkflowTaskInstanceExecution, evaluatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowTransitionEvaluation {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    workflowTransition: ").append(toIndentedString(workflowTransition)).append("\n");
    sb.append("    workflowExecution: ").append(toIndentedString(workflowExecution)).append("\n");
    sb.append("    fromWorkflowTaskInstanceExecution: ").append(toIndentedString(fromWorkflowTaskInstanceExecution)).append("\n");
    sb.append("    evaluatedAt: ").append(toIndentedString(evaluatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

